diff --git a/node_modules/react-scripts/config/webpackDevServer.config.js b/node_modules/react-scripts/config/webpackDevServer.config.js
index 522a81b..306d7e3 100644
--- a/node_modules/react-scripts/config/webpackDevServer.config.js
+++ b/node_modules/react-scripts/config/webpackDevServer.config.js
@@ -109,27 +109,23 @@ module.exports = function (proxy, allowedHost) {
     },
     // `proxy` is run between `before` and `after` `webpack-dev-server` hooks
     proxy,
-    onBeforeSetupMiddleware(devServer) {
-      // Keep `evalSourceMapMiddleware`
-      // middlewares before `redirectServedPath` otherwise will not have any effect
-      // This lets us fetch source contents from webpack for the error overlay
-      devServer.app.use(evalSourceMapMiddleware(devServer));
+    setupMiddlewares: (middlewares, devServer) => {
+      // Keep `evalSourceMapMiddleware` behavior (moved from onBeforeSetupMiddleware)
+      if (devServer && devServer.app) {
+        devServer.app.use(evalSourceMapMiddleware(devServer));
 
-      if (fs.existsSync(paths.proxySetup)) {
-        // This registers user provided middleware for proxy reasons
-        require(paths.proxySetup)(devServer.app);
+        if (fs.existsSync(paths.proxySetup)) {
+          // This registers user provided middleware for proxy reasons
+          require(paths.proxySetup)(devServer.app);
+        }
+
+        // Keep the redirect and noop service worker behavior (moved from onAfterSetupMiddleware)
+        devServer.app.use(redirectServedPath(paths.publicUrlOrPath));
+        devServer.app.use(noopServiceWorkerMiddleware(paths.publicUrlOrPath));
       }
-    },
-    onAfterSetupMiddleware(devServer) {
-      // Redirect to `PUBLIC_URL` or `homepage` from `package.json` if url not match
-      devServer.app.use(redirectServedPath(paths.publicUrlOrPath));
 
-      // This service worker file is effectively a 'no-op' that will reset any
-      // previous service worker registered for the same host:port combination.
-      // We do this in development to avoid hitting the production cache if
-      // it used the same host and port.
-      // https://github.com/facebook/create-react-app/issues/2272#issuecomment-302832432
-      devServer.app.use(noopServiceWorkerMiddleware(paths.publicUrlOrPath));
+      // Return the middleware list (required by webpack-dev-server)
+      return middlewares;
     },
   };
 };
